{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  //create(){}   == create:function(){}\r\n  //   create(tagName) {\r\n  //     return document.createElement(tagName);}\r\n  //创建节点\r\n  create(string) {\r\n    const container = document.createElement(\"template\"); //template 可以存放任意标签并显示，div不能显示<td>元素\r\n    container.innerHTML = string.trim(); //trim()可以去掉字符串两边的空格\r\n    return container.content.firstChild;\r\n  },\r\n\r\n  //增\r\n\r\n  //在node节点后面插入node2节点\r\n  after(node, node2) {\r\n    node.parentNode.insertBefore(node2, node.nextSibling);\r\n  },\r\n  //在node节点前面插入node2节点\r\n  before(node, node2) {\r\n    node.parentNode.insertBefore(node2, node);\r\n  },\r\n  //添加子元素\r\n  append(parent, node) {\r\n    parent.appendChild(node);\r\n  },\r\n  //添加父元素\r\n  wrap(node, parent) {\r\n    dom.before(node, parent); //先把要添加的父元素parent变成哥哥\r\n    dom.append(parent, node); //在把node放到parent里面\r\n  },\r\n\r\n  //删\r\n\r\n  //删除该节点\r\n  remove(node) {\r\n    node.parentNode.removeChild(node);\r\n    return node; //删除了节点，但为了不妨碍其引用所以返回\r\n  },\r\n  //删除全部子节点\r\n  empty(node) {\r\n    //const childNodes = node.childNodes,可以简写成下面的形式\r\n    const { childNodes } = node;\r\n    const array = [];\r\n    //下面的代码存在bug，因为每次移除一个元素以后长度就变了，比如第一次7个元素，移除一个剩下6个，但是这时访问要移除下标为[1]的元素\r\n    //也就是6个元素中的第二个相当于原数组的第三个，所以是跳着移除的不是挨个移除的\r\n    // for (let i = 0; i < childNodes.length; i++) {\r\n    //   dom.remove(childNodes[i]);\r\n    //   array.push(childNodes[i]);\r\n    // }\r\n    // return array;\r\n\r\n    //调整后的代码如下\r\n    let x = node.firstChild;\r\n    while (x) {\r\n      array.push(dom.remove(node.firstChild));\r\n      x = node.firstChild; //移除后新数组的第一个元素\r\n    }\r\n    return array;\r\n  },\r\n\r\n  //改\r\n\r\n  //该属性\r\n  attr(node, name, value) {\r\n    //重载\r\n    if (arguments.length === 3) {\r\n      //三个变量就添加属性\r\n      node.setAttribute(name, value);\r\n    } else if (arguments.length === 2) {\r\n      //两个变量就获取属性\r\n      return node.getAttribute(name);\r\n    }\r\n  },\r\n  //改文本内容\r\n  text(node, string) {\r\n    //如果想获取某个元素的text内容\r\n    if (arguments.length === 2) {\r\n      if (node.innerText in node) {\r\n        //适配\r\n        node.innerText = string; //innerText是ie发明的，只有很古老的ie只识别innerText\r\n      } else {\r\n        node.textContent = string; //textContent适用于Firefox/Chrome等\r\n      }\r\n    } else if (arguments.length === 1) {\r\n      if (node.innerText in node) {\r\n        //适配\r\n        return node.innerText; //innerText是ie发明的，只有很古老的ie只识别innerText\r\n      } else {\r\n        return node.textContent; //textContent适用于Firefox/Chrome等\r\n      }\r\n    }\r\n  },\r\n  //改html内容\r\n  html(node, string) {\r\n    if (arguments.length === 2) {\r\n      node.innerHTML = string;\r\n    } else if (arguments.length === 1) {\r\n      return node.innerHTML;\r\n    }\r\n  },\r\n  //改style属性\r\n  style(node, name, value) {\r\n    if (arguments.length === 3) {\r\n      //dom.style(div,'color','red')\r\n      node.style[name] = value;\r\n    } else if (arguments.length === 2) {\r\n      if (typeof name === \"string\") {\r\n        //dom.style(div,'color')//获取color值\r\n        return node.style[name];\r\n      } else if (name instanceof Object) {\r\n        //dom.style(div,{color:'red'})\r\n        const object = name;\r\n        for (let key in object) {\r\n          node.style[key] = object[key];\r\n        }\r\n      }\r\n    }\r\n  },\r\n  class: {\r\n    add(node, className) {\r\n      node.classList.add(className);\r\n    },\r\n    remove(node, className) {\r\n      node.classList.remove(className);\r\n    },\r\n    has(node, className) {\r\n      return node.classList.contains(className);\r\n    },\r\n  },\r\n  //添加事件监听\r\n  on(node, eventName, fn) {\r\n    node.addEventListener(eventName, fn);\r\n  },\r\n  //移除事件监听\r\n  off(node, eventName, fn) {\r\n    node.removeEventListener(eventName, fn);\r\n  },\r\n  //查找元素\r\n  // find(selector) {\r\n  //   return document.querySelectorAll(selector);\r\n  // },\r\n  //如果加上查找范围\r\n\r\n  find(selector, scope) {\r\n    return (scope || document).querySelectorAll(selector); //如果有范围就在scope里找，否则在document里找\r\n  },\r\n  parent(node) {\r\n    return node.parentNode;\r\n  },\r\n  children(node) {\r\n    return node.children;\r\n  },\r\n  siblings(node) {\r\n    return Array.from(node.parentNode.children).filter((n) => n !== node); //node.parentNode.children是个伪数组必须变幻成数组才能用filter\r\n  },\r\n  next(node) {\r\n    let x = node.nextSibling;\r\n    while (x.nodeType === 3) {\r\n      x = x.nextSibling;\r\n    }\r\n    return x;\r\n  },\r\n  previous(node) {\r\n    let x = node.previousSibling;\r\n    while (x.nodeType === 3) {\r\n      x = x.previousSibling;\r\n    }\r\n    return x;\r\n  },\r\n  each(nodeList, fn) {\r\n    for (let i = 0; i < nodeList.length; i++) {\r\n      fn.call(null, nodeList[i]);\r\n    }\r\n  },\r\n  index(node) {\r\n    const list = dom.children(node.parentNode);\r\n    let i;\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i] === node) {\r\n        break;\r\n      }\r\n    }\r\n    return i;\r\n  },\r\n};\r\n"]}